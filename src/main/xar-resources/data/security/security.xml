<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?><?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml"
        schematypens="http://purl.oclc.org/dsdl/schematron"?><article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
  <info>
    <title>Security</title>
    <date>October 2012</date>
    <keywordset>
      <keyword>operations</keyword>
      <keyword>application-development</keyword>
    </keywordset>
  </info>

  <!-- ================================================================== -->

  <para>This article discusses eXist-db's security features and how to manage authentication, users,
    groups, passwords, permissions and access controls. </para>
  <para>eXist-db's security infrastructure is built on the Unix permissions model. It uses a single
    internal authentication realm. It has additional support for access control lists and
    authentication using multiple realms through a central security manager.</para>

  <!-- ================================================================== -->

  <sect1 xml:id="security-manager">
    <title>The Security Manager</title>

    <para>eXist-db has a central Security Manager which is configured by
        <literal>/db/system/security/config.xml</literal>. This document, which is generated during
      database start-up, defines what authentication realms are available to the Security
      Manager.</para>
    <para>For example, this Security Manager configuration file defines a URL for
      authentication:</para>
    <programlisting language="xml" xlink:href="listings/listing-1.xml"/>

    <para>The Security Manager also features an authentication event listener that you can configure
      to call a custom XQuery module on each authentication event. For example, this configuration
      file would pass authentication events to module <literal>/db/security-events.xq</literal>,
      which performs actions when an authentication event occurs:</para>
    <programlisting language="xml" xlink:href="listings/listing-2.txt"/>

    <para>The XQuery module that receives the authentication events must be a library module in the
        <literal>http://exist-db.org/security/events</literal> namespace. It must have a function
        <literal>authentication()</literal>. This example sends a log message to the console:</para>
    <programlisting language="xquery" xlink:href="listings/listing-3.txt"/>
  </sect1>

  <!-- ================================================================== -->

  <sect1 xml:id="authentication-realms">
    <title>Authentication Realms</title>

    <para>eXist-db always has an internal authentication realm. It also supports multiple external
      authentication realms. This allows you to add one or more external realms which provide user
      and group authentication.</para>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <sect2 xml:id="default-internal-realm">
      <title>Default Internal Realm</title>

      <para>The "eXist-db realm" is the default internal realm. By default this realm handles the
          <code>SYSTEM</code>, <code>admin</code> and <code>guest</code> users and <code>DBA</code>
        and <code>guest</code> groups. Any additional users or groups created in eXist-db will be
        added to this realm.</para>
      <para>Every eXist-db realm user has an account with a username, password and other metadata,
        that is stored in the database. Each user can belong to zero or more groups. This user and
        group information for the eXist-db realm is maintained in the collection
          <literal>/db/system/security/exist</literal>.</para>

      <important>
        <para>The security collections in <code>/db/system/security</code> should
            <emphasis>not</emphasis> be manually manipulated or read. It should be accessed via the
            <code>SecurityManager</code> class or the <code>SecurityManager</code> Module. Directly
          manipulation can lead to inconsistent state and security issues.</para>
      </important>

      <para>The following is a sample user account document for "aretter" in the eXist-db
        realm:</para>
      <programlisting language="xml" xlink:href="listings/listing-4.xml"/>

      <para>As you can see, eXist-db does not store passwords in the clear. It stores hashed values
        of the passwords (in base64 encoding). For this eXist-db uses the
          <emphasis>RIPEMD-160</emphasis> cryptographic hashing algorithm. </para>
      <para>Whenever a user supplies account credentials for authentication, the database applies
        RIPEMD-160 hash to the supplied password and compares it to the hash stored in the user's
        account document. Storing hashes of passwords is a best practice in security that provides a
        strong layer of security compared to storing passwords in the clear. The notion is that even
        if the hashed password is exposed to an attacker, it is too difficult to derive the original
        password from the hash.</para>
      <para>Note that the <literal>/db/system/security</literal> collection is (by default) only
        readable and writable by the system or users in the <literal>dba</literal> group. The
          <literal>dba</literal> group is reserved for database administrators, and only
          <literal>dba</literal> users are allowed to create, remove or modify other users.</para>
    </sect2>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <sect2 xml:id="ldap-realm">
      <title>LDAP Realm</title>

      <para>The LDAP Realm is enabled by default: in <literal>extensions/build.properties</literal>,
          <literal>include.feature.security.ldap</literal> is set to <literal>true</literal>. To use
        the LDAP realm, add an LDAP realm element to
          <literal>/db/system/security/config.xml</literal>. For example:</para>
      <programlisting language="xml" xlink:href="listings/listing-5.xml"/>

      <para>Explanation of the elements used:</para>
      <itemizedlist>
        <listitem>
          <para>The <tag>default-username</tag> and <tag>default-password</tag> elements are used to
            communicate with the LDAP server if a non-LDAP user requests information from LDAP
            server.</para>
        </listitem>
        <listitem>
          <para>The <tag>search-*</tag> elements are mapping for names.</para>
        </listitem>
        <listitem>
          <para>The <tag>metadata-search-attribute</tag> elements are used for mapping LDAP account
            metadata onto eXist-db account metadata.</para>
        </listitem>
        <listitem>
          <para>The <tag>whitelist</tag> element contains the allowed groups for authentication. The
              <tag>blacklist</tag> element contains groups that are not allowed.</para>
        </listitem>
        <listitem>
          <para>The <tag>transformation</tag> element contains actions to be performed after first
            authentication.</para>
        </listitem>
      </itemizedlist>
    </sect2>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <sect2 xml:id="oauth-realm">
      <title>OAuth Realm</title>

      <para>Due to the variation in implementations across OAuth providers, eXist-db developers have
        to create provider-specific Java libraries. eXist-db currently supports only Facebook and
        Google for OAuth authentication (see <link xlink:href="http://developers.facebook.com/docs/authentication/" condition="_blank">Facebook Authentication</link> and <link xlink:href="https://developers.google.com/accounts/docs/OAuth2" condition="_blank">Google's OAuth documentation</link>.</para>
      <para>The OAuth Realm is not enabled by default. To enable the OAuth realm, set the
          <literal>include.feature.security.oauth</literal> property to <literal>true</literal> in
          <literal>extensions/local.build.properties</literal> and <link xlink:href="exist-building">rebuild eXist-db</link>. Then edit <code>web.xml</code> and
          <code>controller-config.xml</code> to enable <code>OAuthServlet</code>. After restarting
        eXist-db, add a <tag>realm</tag> element for OAuth to
          <literal>/db/system/security/config.xml</literal>. For example:</para>
      <programlisting language="xml" xlink:href="listings/listing-6.xml"/>

      <para>Explanation of these elements:</para>
      <itemizedlist>
        <listitem>
          <para>Valid values for the service element's <code>provider</code> attribute are
              <code>facebook</code> and <code>google</code>. </para>
        </listitem>
        <listitem>
          <para>The <code>name</code> attribute must be a unique name for the application.</para>
          <para>The <code>key</code> and <code>secret</code> attribute values must be provided by
            the OAuth provider.</para>
        </listitem>
      </itemizedlist>
    </sect2>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <sect2 xml:id="openid-realm">
      <title>OpenID Realm</title>

      <para>
        <link xlink:href="http://openid.net/" condition="_blank">OpenID</link> is an authentication mechanism where the identity of the
        user is maintained by trusted external providers. This takes the burden in maintaining and
        securing passwords for users off of the eXist-db database and on to the Identity Provider
        (IdP). </para>
      <para> By default, the OpenID service is not built and therefore not enabled. To recompile the
        source with OpenID enabled, edit <code>local.build.properties</code> in the extensions
        directory and change the <code>include.feature.security.openid</code> property from false to
        true. Then <link xlink:href="exist-building">rebuild eXist-db</link>. </para>

      <programlisting xlink:href="listings/listing-7.txt"/>
      <para> This extension compiles into <code>lib/extensions/exist-security-openid.jar</code>.
        Running eXist-db with that <code>.jar</code> should enable the extension. To disable the
        service remove the <code>.jar</code> and restart eXist-db. </para>
    </sect2>

  </sect1>

  <!-- ================================================================== -->

  <sect1 xml:id="changing-admin-password">
    <title>Changing the Administrator Password</title>

    <para>When the database is started for the first time, two default users are created:
        <code>admin</code> and <code>guest</code>. The <code>admin</code> user is a member of the
        <literal>dba</literal> group, and therefore has administrative privileges; the
        <code>guest</code> user is a member of the group <code>guest</code> and is not an
      administrator.</para>
    <para> At this point, the <code>admin</code> password is set to <literal>null</literal>, and so
      access to the database is <emphasis>initially granted to everyone</emphasis>. </para>
    <para>To set restrictions on database access, first set a password for the <code>admin</code>
      user in one of the following ways: </para>
    <itemizedlist>
      <listitem>
        <para>The <link xlink:href="java-admin-client">Java Admin Client</link> GUIe has a dialog
          box for user management. To open this dialog box, enter <guimenuitem>Ctrl-U</guimenuitem>
          or select <guimenuitem>Tools, Edit Users</guimenuitem>:</para>
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="assets/client-5.png" width="50%"/>
            </imageobject>
          </mediaobject>
        </informalfigure>
        <orderedlist>
          <listitem>
            <para>At the top, select the <code>admin</code> user in the table of users</para>
          </listitem>
          <listitem>
            <para>Type in your password into the corresponding fields</para>
          </listitem>
          <listitem>
            <para>Click the <guimenuitem>Modify User</guimenuitem> button to apply the
              changes</para>
          </listitem>
        </orderedlist>
      </listitem>
      <listitem>
        <para>In the <link xlink:href="{dashboard}" condition="_blank">User manager</link>'s <emphasis>User Manager</emphasis>, click on the
          user account that you wish to edit and type its password twice. Confirm by clicking
            <guimenuitem>save</guimenuitem>.</para>
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="assets/usermanager.png" width="50%"/>
            </imageobject>
          </mediaobject>
        </informalfigure>
      </listitem>
      <listitem>
        <para>You can also set a new administrator password on the command line in the console mode
          of the <link xlink:href="java-admin-client">Java Admin Client</link>. Enter the following
          at the command prompt:</para>
        <programlisting xlink:href="listings/listing-9.txt"/>
      </listitem>
    </itemizedlist>


    <para>The other default user, <code>guest</code> has the default password <code>guest</code>.
      The guest identity is internally assigned to all clients that have not authenticated
      themselves. </para>
    <note>
      <para>The Xincon WebDAV interface does not support authentication, so <code>guest</code> is
        assumed for its users by default. Note that this aspect of WebDAV is a potential source of
        confusion. You have to be careful about setting read/write permissions for this API.</para>
    </note>
  </sect1>

  <!-- ================================================================== -->

  <sect1 xml:id="creating-users">
    <title>Creating Users</title>

    <para>It is easy to create new users using the <link xlink:href="java-admin-client">Java Admin
        Client</link>. In the <guimenuitem>Edit users</guimenuitem> dialog box, fill in the
      username, password, and home collection fields. Assign a group (or groups) for the new user.
      Finally, select <guimenuitem>Create User</guimenuitem>. The new user will appear in the list
      of users in the top panel.</para>
    <para>The console <code>adduser</code> command also allows you to create additional users. The
      command asks for a password and a list of groups to which the user should belong. An example
      is shown below:</para>
    <programlisting xlink:href="listings/listing-12.txt"/>
    <para>You can list all the users using the <literal>users</literal> command.</para>
  </sect1>

  <!-- ================================================================== -->

  <sect1 xml:id="permissions">
    <title>Resource Permissions</title>

    <para>eXist-db supports both a Unix like permissions model and simple Access Control Lists. It
      is important to understand the Unix permission model first. Access Control Lists can be useful
      when the Unix Model is insufficient for your application.</para>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <sect2>
      <title>Unix Model</title>

      <para>The default that is based on the UNIX <emphasis role="bold">read</emphasis>, <emphasis role="bold">write</emphasis> and <emphasis role="bold">execute</emphasis> flags for
          <emphasis role="bold">owner</emphasis>, <emphasis role="bold">group</emphasis> and
          <emphasis role="bold">world</emphasis>. (In versions prior to eXist-db 2.0, there was no
          <emphasis role="bold">execute</emphasis> flag, rather an <emphasis role="bold">update</emphasis> flag was present.)</para>
      <informalfigure>
        <mediaobject>
          <imageobject>
            <imagedata fileref="assets/owner-group-world.png" width="50%"/>
          </imageobject>
        </mediaobject>
      </informalfigure>
      <informaltable>
        <tgroup cols="2">
          <thead>
            <row>
              <entry>
                <para>Category</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <para>Owner</para>
              </entry>
              <entry>
                <para>These permissions work for the owner of the resource</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>Group</para>
              </entry>
              <entry>
                <para>These permissions work for the members of the group of the resource</para>
              </entry>
            </row>
            <row>
              <entry>
                <para>World</para>
              </entry>
              <entry>
                <para>These permissions work for any user</para>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <note>
        <para>Be aware that permissions for collections are <emphasis>not</emphasis> inherited by
          their sub-collections: write permissions can be set for sub-collections, but you must also
          have write permissions for the parent collection for these to be effective.</para>
      </note>
      <para>Using the <link xlink:href="java-admin-client">Java Admin Client</link> or its command
        line, you can list the permissions assigned to each resource (this assumes the
          <literal>permissions</literal> property in <literal>client.properties</literal> is set to
          <literal>true</literal>). For example:</para>
      <programlisting xlink:href="listings/listing-13.txt"/>

      <para>The Java Admin Client displays resource permissions in a format similar to the output of
        the Unix <literal>ls -l</literal> command: a ten-character code.</para>
      <itemizedlist>
        <listitem>
          <para> The first character represents the type of resource: <literal>-</literal> (hyphen)
            for documents (files) and <literal>d</literal> for collections. </para>
        </listitem>
        <listitem>
          <para>The next three characters are the permissions for the user: a <literal>-</literal>
            (hyphen) is used for denied permissions, <literal>r</literal> for read,
              <literal>w</literal> for write, and <literal>x</literal> for execute. </para>
        </listitem>
        <listitem>
          <para>The next three characters (five through seven) set the permissions for groups</para>
        </listitem>
        <listitem>
          <para>The last three for others (i.e. anyone else who can access the database). </para>
        </listitem>
      </itemizedlist>

      <para>Given the previous example, we can see that all files except
          <literal>r_and_j.xml</literal> are owned by user <code>admin</code> and group
          <code>dba</code>.</para>
      <para>As mentioned in the previous section, the database root collection
          <literal>/db</literal> initially has its permissions set to <literal>drwxr-xr-x</literal>,
        so full access is granted to everyone. </para>
      <para> Also note that the default setting for all newly created resources is
          <literal>-rw-r--r--</literal>: the owner has read/write permissions, not execute, and the
        group and others (world) have read permissions only.</para>

      <sect3>
        <title>Changing Resource Permissions</title>

        <para>Permissions can be changed using either the <guimenuitem>Edit Properties</guimenuitem>
          dialog box (shown below) in the <link xlink:href="java-admin-client">Java Admin
            Client</link> or the <literal>chmod</literal> command in its shell window. </para>
        <para>The <guimenuitem>Edit Properties</guimenuitem> dialog box is opened by selecting
            <guimenuitem>Files, Resource Properties</guimenuitem> from the menu, or by clicking on
          the <guimenuitem>Properties Icon</guimenuitem> (image with checkboxes) in the toolbar.
          This dialog box shows the permission settings for all database users and groups.</para>
        <informalfigure>
          <mediaobject>
            <imageobject>
              <imagedata fileref="assets/client-6.png" width="50%"/>
            </imageobject>
          </mediaobject>
        </informalfigure>
        <note>
          <para>Please note that only the owner of a resource or members of the
              <literal>dba</literal> group are allowed to change permissions. All other users who
            attempt to change these settings will receive an error message.</para>
        </note>
        <para>On the command line, you can use the <literal>chmod</literal> commandThis command
          expects two parameters:</para>
        <programlisting>chmod [resource] [user|group|other]=[+|-][read|write|execute][, ...]</programlisting>
        <orderedlist>
          <listitem>
            <para>Name of a resource or collection</para>
          </listitem>
          <listitem>
            <para>Read, write and execute permissions to set or remove (<literal>+</literal> or
                <literal>-</literal> respectively, for the specified user, group, or other according
              to the following syntax:</para>
          </listitem>
        </orderedlist>

        <para>For example, to grant the write permission to the group and deny all to others:</para>
        <programlisting>chmod hamlet.xml group=+write,other=-read,-execute,-write</programlisting>
        <para>If you do not specify a resource in the first argument of the <literal>chmod</literal>
          command, the permission string will be applied to the <emphasis>current
            collection</emphasis>. This is an important feature if you want to change permissions
          for the <literal>/db</literal> root collection. </para>
        <para>For example, to deny write permissions to others for the entire database, change
          directory to the root collection (enter <literal>cd /db</literal>) and enter:</para>
        <programlisting>chmod other=-write</programlisting>
      </sect3>

      <sect3>
        <title>Changing Resource Ownership</title>

        <para>Only the owner has full control over a resource. The <link xlink:href="java-admin-client">Java Admin Client</link> provides the
            <literal>chown</literal> command to change ownership. The command expects three
          arguments:</para>
        <programlisting>chown [user] [group] [resource]</programlisting>
        <orderedlist>
          <listitem>
            <para>Name of the user.</para>
          </listitem>
          <listitem>
            <para>Name of the group.</para>
          </listitem>
          <listitem>
            <para>Name of the resource.</para>
          </listitem>
        </orderedlist>

        <para>For example, to change the owner of the file <literal>r_and_j.xml</literal>:</para>
        <programlisting xlink:href="listings/listing-18.txt"/>
      </sect3>
    </sect2>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <sect2 xml:id="ACLs">
      <title>Access Control Lists (ACL)</title>

      <para>To be written. More information about ACLs is available as <link xlink:href="http://www.adamretter.org.uk/presentations/security-in-existdb_xml-prague_existdb_20120210.pdf" condition="_blank">slides</link> (PDF) and a presentation on <link xlink:href="http://www.youtube.com/watch?v=Z_Dryy9DtVo" condition="_blank">YouTube</link>.</para>
    </sect2>
  </sect1>

  <!-- ================================================================== -->

  <sect1 xml:id="permission-checks">
    <title>Permission Checks</title>

    <para>Each operation in eXist-db enforces permission checks. The details of the permissions
      required for an operation are laid out below. </para>
    <table>
      <title>Document Permissions Matrix</title>

      <tgroup cols="3">
        <thead>
          <row>
            <entry>
              <para>Operation</para>
            </entry>
            <entry>
              <para>Collection</para>
            </entry>
            <entry>
              <para>Document</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>Open Collection</para>
            </entry>
            <entry>
              <para><code>--x</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>List Collection Contents</para>
            </entry>
            <entry>
              <para><code>r-x</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Add Document</para>
            </entry>
            <entry>
              <para><code>-wx</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Remove Document</para>
            </entry>
            <entry>
              <para><code>-wx</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Overwrite Existing Document</para>
            </entry>
            <entry>
              <para><code>--x</code></para>
            </entry>
            <entry>
              <para><code>-w-</code> (or owner)</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <table>
      <title>Document Copy/Move Permissions Matrix</title>

      <tgroup cols="5">
        <thead>
          <row>
            <entry>
              <para>Operation</para>
            </entry>
            <entry>
              <para>Source Collection</para>
            </entry>
            <entry>
              <para>Source Document</para>
            </entry>
            <entry>
              <para>Destination Collection (if exists)</para>
            </entry>
            <entry>
              <para>Destination Document (if exists)</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>Copy Document</para>
            </entry>
            <entry>
              <para><code>--x</code></para>
            </entry>
            <entry>
              <para><code>r--</code></para>
            </entry>
            <entry>
              <para><code>-wx</code> (<code>w</code> only if destination document does not
                exist)</para>
            </entry>
            <entry>
              <para><code>-w-</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Move/Rename Document</para>
            </entry>
            <entry>
              <para><code>-wx</code></para>
            </entry>
            <entry>
              <para><code>--x</code> (or owner)</para>
            </entry>
            <entry>
              <para><code>-wx</code></para>
            </entry>
            <entry>
              <para><code>-w-</code></para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <table>
      <title>Collection Permissions Matrix</title>

      <tgroup cols="5">
        <colspec colname="c1"/>
        <colspec colname="c2"/>
        <colspec colname="c3"/>
        <colspec colname="c4"/>
        <colspec colname="c5"/>
        <colspec colname="c6"/>
        <thead>
          <row>
            <entry>
              <para>Operation</para>
            </entry>
            <entry>
              <para>Parent of Source Collection</para>
            </entry>
            <entry>
              <para>Source Collection</para>
            </entry>
            <entry>
              <para>Parent of Destination Collection</para>
            </entry>
            <entry>
              <para>Destination Collection (if exists)</para>
            </entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <para>Add Collection</para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
            <entry>
              <para><code>-wx</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Remove Collection</para>
            </entry>
            <entry>
              <para><code>-wx</code></para>
            </entry>
            <entry>
              <para><code>rwx</code> (and on all sub-collections)</para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Copy Collection</para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
            <entry>
              <para><code>r-x</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
          </row>
          <row>
            <entry>
              <para>Move/Rename Collection</para>
            </entry>
            <entry>
              <para><code>-wx</code></para>
            </entry>
            <entry>
              <para><code>-w-</code></para>
            </entry>
            <entry>
              <para><code>---</code></para>
            </entry>
            <entry>
              <para><code>-wx</code> (When replacing an existing collection, then the permissions
                for removing that collection must be met first).</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>When copying a collection, permissions are checked for each sub-collection and
      resource.</para>
    <para>Copying a sub-collection requires <emphasis>r-x</emphasis> on the sub-collection and
        <emphasis>rwx</emphasis> on the destination collection. If the sub-collection already exists
      in the destination then <emphasis>r-x</emphasis> is required on that.</para>
    <para>Copying resources from a collection requires <emphasis>r--</emphasis> on the resource, and
        <emphasis>-w-</emphasis> on the destination resource if it exists, otherwise
        <emphasis>-w-</emphasis> on the destination collection.</para>
  </sect1>

  <!-- ================================================================== -->

  <sect1 xml:id="legacy-internal-realm">
    <title>Legacy Internal Realm</title>

    <para>Before eXist-db 2.0, the internal security realm was maintained in a different manner. The
      details are included here for the purpose of informing decisions on migration.</para>
    <para>Every eXist-db database user has an account with a username, password and other
      information that is stored in the database. Furthermore, every user belongs to one or more
      groups - and respectively, every resource in the database is owned by a user and by a group.
      By default, the owner is set to the user who created the resource, and his primary group, but
      eXist-db allows for different permissions for the owner, the owner's group and others.
      However, only the owner of the resource (or <literal>dba</literal> users) can change these
      permissions.</para>
    <para>User and group information is found in the designated XML file
        <literal>/db/system/users.xml</literal> located in collection <literal>/db/system</literal>.
      This file is generated during database start-up. The following is a simple example of a
        <literal>users.xml</literal> document: </para>

    <programlisting language="xml" xlink:href="listings/listing-8.xml"/>
    <para>As we see from this example, passwords are encrypted using an <emphasis>MD5</emphasis>
      algorithm (e.g. <literal>user-1</literal> has the <emphasis>MD5</emphasis>-encrypted password
      "7f0261c14d7d1b8e51680a013daa623e"). Therefore, whenever a user enters his or her password,
      the database generates an MD5 encryption and compares it to the encryption stored in
        <literal>users.xml</literal>. Since it is very difficult for users to guess the original
      password from the MD5 string, passwords in eXist-db should be sufficiently secure.</para>
    <para>Note that the <literal>/db/system</literal> collection is (by default) only readable by
        <literal>dba</literal> users (although it is possible to make it accessible by other users).
      The <literal>dba</literal> group is specially reserved for database administrators, and only
        <literal>dba</literal> users are allowed to create or remove users, or change permissions
      for other users.</para>
    <important>
      <para>By default, access to an eXist-db database is disabled until a password is set for the
        administrator (see <emphasis>Changing the Administrator Password</emphasis> below for
        instructions). Since <literal>write</literal> permissions for files are granted to everyone,
        it is important to be careful about how you configure server access for users on a network
        or the Internet.</para>
    </important>
  </sect1>
</article>