<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?><?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml"
        schematypens="http://purl.oclc.org/dsdl/schematron"?><article xmlns="http://docbook.org/ns/docbook" version="5.0">
  <info>
    <title>SOAP Interface Developer's Guide</title>
    <date>1Q18</date>
    <keywordset>
      <keyword>java-development</keyword>
      <keyword>interfaces</keyword>
    </keywordset>
  </info>

  <!-- ================================================================== -->

  <para>This article explains how to add a SOAP interface to eXist-db using Java code.</para>

  <!-- ================================================================== -->

  <sect1>
    <title>Introduction</title>

    <para>eXist-db provides a SOAP interface as an alternative to XML-RPC. Programming with SOAP is slightly more convenient than XML-RPC. While you
      have to write XML-RPC method calls by hand, most SOAP tools will automatically create the low-level code from a given WSDL service description.
      Also fewer methods are needed to exploit the same functionality. On the other hand, SOAP toolkits tend to be complex.</para>
    <important>
      <para>SOAP is not available in the (default configuration) stand-alone server.</para>
    </important>
    <para>eXist-db uses the Axis SOAP toolkit from Apache, which runs as a servlet. The Tomcat webserver shipped with eXist has been configured to
      start Axis automatically, and will listen on port 8080: <literal>http://localhost:8080/exist/services</literal>. </para>

    <para>The interface has been tested using various clients, including Perl (SOAP::Lite) and the Microsoft .NET framework. The client stubs needed
      to access the SOAP interface from Java have been automatically generated by Axis and are included in the distribution.</para>

  </sect1>

  <!-- ================================================================== -->

  <sect1>
    <title>Web services</title>

    <para>eXist-db provides two web services: one that contains methods to query the server and retrieve documents: </para>
    <itemizedlist>
      <listitem>
        <para>A service to query the server and retrieve documents. This will listen on:</para>
        <programlisting>http://localhost:8080/exist/services/Query</programlisting>
      </listitem>
      <listitem>
        <para>A service for storing and removing documents and collections. This will listen on:</para>
        <programlisting>http://localhost:8080/exist/services/Admin</programlisting>
      </listitem>
    </itemizedlist>

    <para>Both services are described in the Java docs regarding their interfaces.</para>

    <!-- ================================================================== -->

  </sect1>
  <sect1>
    <title>Example</title>

    <para>The following example demonstrates how to retrieve a document from the database using SOAP:</para>

    <programlisting xmlns:xlink="http://www.w3.org/1999/xlink" language="java" xlink:href="listings/listing-3.txt"/>

    <para>The <literal>Query</literal> client stub class has been automatically generated by the WSDL service description. It has methods for each of
      the operations defined in the WSDL. You will find the web service description file <literal>query.wsdl</literal> in directory
        <literal>src/org/exist/soap</literal>. </para>
    <para>To use the services provided, the client first has to establish a connection with the database. This is done by calling
        <literal>connect()</literal> with a valid user id and password. <literal>connect()</literal> returns a session id, which can then be passed to
      any subsequent method calls.</para>
    <para>To retrieve a resource simply call <literal>Query.getResource()</literal>. </para>
    <para>To release the current session, the method <literal>Query.disconnect()</literal> is called. Otherwise the session will remain valid for at
      least 60 minutes.</para>
  </sect1>
</article>