<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?><?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml"
        schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink">
    <info>
        <title>Production Use - Good Practice</title>
        <date>2Q19</date>
        <keywordset>
            <keyword>operations</keyword>
        </keywordset>
    </info>

    <!-- ================================================================== -->

    <para>From our and our clients' experiences of developing and using eXist-db in production
        environments a number of lessons have been learned. This Good Practice guide is an attempt
        to cover some of the considerations that should be taken into account when deploying
        eXist-db for use in a production environment.</para>
    <para>The concepts laid out within this document should not be considered absolute or accepted
        wholesale - they should rather be used as suggestions to guide users in their eXist-db
        deployments.</para>

    <!-- ================================================================== -->

    <sect1 xml:id="server">
        <title>The Server</title>

        <itemizedlist>
            <listitem>
                <para>Ensure that your server is up-to-date and patched with any necessary security
                    fixes.</para>
            </listitem>
            <listitem>
                <para>eXist-db is written in Java - so for performance and security reasons, please
                    ensure that you have the latest and greatest Java JDK release that is compatible
                    with your version of eXist. The latest version can always be found here at:
                    <link condition="_blank" xlink:href="https://java.sun.com"
                    >http://java.sun.com</link> and the recommended major version for a given eXist
                    release can be found at: <link condition="_blank"
                    xlink:href="https://bintray.com/existdb/releases/exist#read"
                    >https://bintray.com/existdb/releases/exist#read</link> </para>
            </listitem>
        </itemizedlist>



    </sect1>

    <!-- ================================================================== -->

    <sect1 xml:id="install">
        <title>Install from Source or Release?</title>

        <para>Most users will install an officially released version of eXist-db on their production
            systems and usually this is perfectly fine. However, for production systems there can be
            advantages to installing eXist-db from source code.</para>
        <para>eXist-db may be installed and build (see <link xlink:href="exist-building">Building
            eXist-db</link>) from source code to a production system in one of two ways:</para>
        <variablelist spacing="compact">
            <varlistentry>
                <term>Via Local Build Machine (preferred)</term>
                <listitem>
                    <para>You checkout the eXist-db code for a release branch (or trunk) from our
                        GitHub repository to a local machine. From here you build a distribution
                        which you test and then deploy to your live server.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Directly from GitHub</term>
                <listitem>
                    <para>In this case you don't use a local machine for building an eXist-db
                        distribution, but you checkout the code from a release branch (or the
                        develop branch) directly from our GitHub repository on your server and build
                        it in-situ.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>Some advantages of installing eXist-db from source code are:</para>
        <variablelist spacing="compact">
            <varlistentry>
                <term>Patches</term>
                <listitem>
                    <para>If patches or fixes are developed that are relevant to your specific
                        needs, you can update your code and re-build eXist.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Features</term>
                <listitem>
                    <para>If you are following trunk and new features are developed which you are
                        interested in, you can update your code and re-build to take advantage of
                        these. </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <warning>
            <para> eXist's code trunk is generally <emphasis>not</emphasis> recommended for
                production use! Although it should always compile and be relatively stable, it may
                also contain as yet unrecognised regressions or result in unexpected behaviour.
            </para>
        </warning>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <sect2 xml:id="upgrade">
            <title>Upgrading</title>

            <para>If you are upgrading the version of eXist-db that you use in your production
                system, please always follow these two points:</para>
            <variablelist>
                <varlistentry>
                    <term>Backup</term>
                    <listitem>
                        <para> Always make sure you have a full database backup before you
                            upgrade.</para>
                        <para/>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Test</term>
                    <listitem>
                        <para> Always test your application in the new version of eXist-db in a
                            development environment to ensure expected behaviour before you upgrade
                            your production system.</para>
                    </listitem>
                </varlistentry>
            </variablelist>


        </sect2>
    </sect1>

    <!-- ================================================================== -->

    <sect1 xml:id="config">
        <title>Configuring eXist</title>

        <para>There are four main things to consider here:</para>
        <variablelist>
            <varlistentry>
                <term><xref linkend="sect-permissions"/></term>
                <listitem>
                    <para>Ensure that eXist-db is installed in a secure manner.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><xref linkend="sect-attack-surface"/></term>
                <listitem>
                    <para> Configure eXist-db so it provides <emphasis>only</emphasis> what you need
                        for your application.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><xref linkend="resources"/></term>
                <listitem>
                    <para> Configure your system and eXist-db so that eXist-db has access to enough
                        resources and the system starts and stops eXist-db in a clean manner.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><xref linkend="performance"/></term>
                <listitem>
                    <para> Configure your system and eXist-db so that you get the maximum
                        performance possible.</para>
                </listitem>
            </varlistentry>
        </variablelist>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <sect2 xml:id="sect-permissions">
            <title>Security - Permissions</title>

            <sect3 xml:id="exist-perm">
                <title>eXist-db Permissions</title>

                <para>eXist-db ships with fairly relaxed permissions to facilitate rapid application
                    development. However, for production systems these should be constrained:</para>
                <variablelist spacing="compact">
                    <varlistentry>
                        <term><code>admin</code> account</term>
                        <listitem>
                            <para>The password of the admin account is blank by default! Ensure that
                                you set a decent password.</para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term><code>default-permissions</code></term>
                        <listitem>
                            <para>The default permissions for creating resources and collections in
                                eXist-db are set in <literal>conf.xml</literal>. The current
                                settings are ok, but you may like to improve on them for your own
                                application security.</para>
                        </listitem>
                    </varlistentry>
                    <varlistentry>
                        <term><code>/db</code> permissions</term>
                        <listitem>
                            <para>The default permissions for <code>/db</code> are
                                <code>0755</code>, which should be sufficient in most cases. In case
                                you needed to change this, you could do that with (here for
                                <code>0775</code>):</para>
                            <programlisting language="xquery">sm:chmod(xs:anyURI("/db"), "rwxrwxr-x")</programlisting>
                        </listitem>
                    </varlistentry>
                </variablelist>
            </sect3>

            <sect3 xml:id="os-perm">
                <title>Operating System Permissions</title>

                <para>eXist-db should be deployed and configured to run whilst following the
                    security best practices of the operating system on which it is deployed.</para>
                <para>Typically we would recommend creating an <code>exist</code> user account and
                    <code>exist</code> user group with <emphasis>no</emphasis> login privileges (no
                    shell and empty password), changing the permissions of the eXist-db installation
                    to be owned by that user and group. Then run eXist-db using those credentials.
                    An example of this on OpenSolaris might be:</para>
                <programlisting language="bash" xlink:href="listings/listing-2.txt"/>
            </sect3>
        </sect2>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <sect2 xml:id="sect-attack-surface">
            <title>Security - Attack Surface</title>

            <para>For any live application it is best practice to keep the attack surface of the
                application as small as possible. There are three aspects to this:</para>
            <orderedlist>
                <listitem>
                    <para>Limiting means of arbitrary code execution.</para>
                </listitem>
                <listitem>
                    <para>Reducing the application itself to the absolute essentials.</para>
                </listitem>
                <listitem>
                    <para>Limiting access routes to the application.</para>
                </listitem>
            </orderedlist>

            <para>eXist-db is no exception and should be configured for your production systems so
                that it provides only what you need and no more. For example, the majority of
                applications will be unlikely to require the WebDAV or SOAP Admin features for
                operation in a live environment. These and other services can be disabled
                easily.</para>
            <para>Means for anonymous users to execute arbitrary code require special attention.
                There are three means of code execution in eXist, which make sense during
                development, but should be reconsidered for production systems:</para>
            <variablelist spacing="compact">
                <varlistentry>
                    <term>Java binding</term>
                    <listitem>
                        <para>The ability to execute java code from inside the XQuery processor is
                            disabled by default in <literal>conf.xml</literal>:</para>
                        <programlisting language="xml">&lt;xquery enable-java-binding="no" .../&gt;</programlisting>
                        <para> It is strongly recommended to keep it disabled on production
                            systems.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>XML external entities</term>
                    <listitem>
                        <para>In order to ensure a secure environment, the
                            <literal>external-general-entities</literal>,
                            <literal>external-parameter-entities</literal>, and
                            <literal>secure-processing</literal> feature flags should be set in
                            <literal>conf.xml</literal>:</para>
                        <programlisting language="xml" xlink:href="listings/listing-3.xml"/>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>REST server</term>
                    <listitem>
                        <para>We recommend to prevent eXist's REST server from directly receiving
                            web requests, and use URL Rewriting <emphasis>only</emphasis> to control
                            code execution. The REST server feature is enabled by default in
                            <literal>$EXIST_HOME/etc/webapp/WEB-INF/web.xml</literal>. Changing the
                            <code>param-value</code> to <code>true</code>, allows you to filter
                            request via your own XQuery controller.</para>
                        <programlisting language="xml" xlink:href="listings/listing-4.xml"/>
                        <para>The following options allow a more fine-grained control over the REST
                            server's functionality:</para>
                        <variablelist>
                            <varlistentry>
                                <term>XQuery submissions</term>
                                <listitem>
                                    <para>We recommend to restrict the REST servers ability to
                                        execute XQuery code to authenticated users, by modifying:
                                        <literal>$EXIST_HOME/etc/webapp/WEB-INF/web.xml</literal>:</para>
                                    <programlisting language="xml" xlink:href="listings/listing-5.xml"/>
                                </listitem>
                            </varlistentry>
                            <varlistentry>
                                <term>XUpdate statements</term>
                                <listitem>
                                    <para>In addition, we recommend to restrict the REST servers
                                        ability to execute XUpdate statements. Simply modify
                                        <literal>$EXIST_HOME/etc/webapp/WEB-INF/web.xml</literal>by
                                        changing the <code>param-value</code> from
                                        <code>enabled</code> to <code>disabled</code>:</para>
                                    <programlisting language="xml" xlink:href="listings/listing-6.xml"/>
                                </listitem>
                            </varlistentry>
                        </variablelist>
                    </listitem>
                </varlistentry>

            </variablelist>
            <para>Further considerations for a live environment:</para>
            <variablelist spacing="compact">
                <varlistentry>
                    <term>Services</term>
                    <listitem>
                        <para>eXist-db provides services for accessing the database. You should
                            reduce these to the absolute minimum you need for your production
                            application.This is done via
                            <code>etc/webapp/WEB-INF/web.xml</code>.
                            You should look at each configured service, servlet or filter and ask
                            yourself: do we use this? Most production environments are unlikely to
                            need WebDAV.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Extension Modules</term>
                    <listitem>
                        <para>eXist-db loads several XQuery and Index extension modules by default.
                            You should modify the <tag>builtin-modules</tag> section of
                            <literal>etc/conf.xml</literal> and <emphasis>only</emphasis> load what you
                            need for your application.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </sect2>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <sect2 xml:id="resources">
            <title>Resources</title>

            <para>You should ensure that you have enough memory and disk space in your system so
                that eXist-db can cope with peak demands.</para>
            <variablelist spacing="compact">
                <varlistentry>
                    <term><code>-Xmx</code></term>
                    <listitem>
                        <para>However you decide to deploy and start eXist, please ensure that you
                            allocate enough maximum memory to eXist-db uwing the Java
                            <code>-Xmx</code> setting. See <code>bin/backup.sh</code> and
                            <code>bin/startup.sh</code>.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><code>cacheSize</code> and <code>collectionCache</code></term>
                    <listitem>
                        <para>These two settings in <tag>db-connection</tag> of
                            <literal>etc/conf.xml</literal> should be adjusted appropriately based on
                            your <code>-Xmx</code> setting (see above). See the <link
                            xlink:href="tuning">tuning guide</link> for advice on sensible
                            values.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Disk space</term>
                    <listitem>
                        <para>Please ensure that you have plenty of space for your database to grow.
                            Unsurprisingly, running out of disk space can result in database
                            corruptions or having to rollback the database to a known state.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </sect2>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <sect2 xml:id="performance">
            <title>Performance</title>

            <para>Keeping the eXist-db application, data and journal on separate disks, connected to
                different I/O channels, can have a positive impact on performance. The location of
                the data files and journals can be changed in <literal>etc/conf.xml</literal>.</para>
        </sect2>
    </sect1>

    <!-- ================================================================== -->

    <sect1 xml:id="backups">
        <title>Backups</title>

        <para> <emphasis>This is fundamental</emphasis>: Make sure you have them, that they are
            up-to-date and that a restore is possible!</para>
        <para>eXist-db provides 3 different mechanisms for performing backups - </para>
        <orderedlist>
            <listitem>
                <para>Full database backup.</para>
            </listitem>
            <listitem>
                <para>Differential database backup.</para>
            </listitem>
            <listitem>
                <para>Snapshot of the database data files.</para>
            </listitem>
        </orderedlist>
        <para>Each of these backup mechanisms can be scheduled, either with eXist-db or with your
            operating system scheduler. See the <link xlink:href="backup">backup</link> article and
            <literal>conf.xml</literal> for further details.</para>
    </sect1>

    <!-- ================================================================== -->

    <sect1 xml:id="web-deploy">
        <title>Web Deployments</title>

        <para>eXist-db, like any Web Application Server, should
            not be directly exposed to the Web. Instead, we strongly recommend proxying eXist-db
            through a Web Server such as <link condition="_blank"
            xlink:href="https://wiki.nginx.org/Main">Nginx</link> or <link condition="_blank"
            xlink:href="https://httpd.apache.org/">Apache HTTPD</link>. See <link
            xlink:href="production_web_proxying">here</link> for further details.</para>
        <para>If you proxy eXist-db through a Web Server, you can also configure your firewall to
            allow external access directly to the Web Server only. If done correctly this means that
            web users will not be able to access any eXist-db services directly, except your
            application, which is proxyied into the Web Servers namespace.</para>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <sect2 xml:id="gzip">
            <title>Enable GZip Compression</title>

            <para>eXist-db by default operates inside the Jetty Application Server. Jetty (and most
                other Java Application Servers) provides a mechanism for enabling dynamic GZip
                compression of resources. In other words: Jetty can be configured to dynamically
                GZip compress any resource received from the server by HTTP. Enabling dynamic GZip
                compression can reduce the size of transfers, and as such reduce the transfer time
                of resources from the server to the client, hopefully resulting in a faster
                experience for the end-user.</para>
            <para>GZip Compression can be enabled in <code>web.xml</code>, which can be found in
                either <code>$EXIST_HOME/etc/webapp/WEB-INF/web.xml</code> for default deployments or
                <code>$EXIST_HOME/etc/jetty/standalone/WEB-INF/web.xml</code> for standalone
                deployments.</para>
        </sect2>
    </sect1>
</article>
